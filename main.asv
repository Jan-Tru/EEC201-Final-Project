%% Testing section for all the Methods of WavFileObj
clc; clear; close all;

numFiles = 19;

zero_train = LoadMassFiles("Zero_train",numFiles);
zero_test = LoadMassFiles("Zero_test",numFiles);
twelve_train = LoadMassFiles("Zero_train",numFiles);
twelve_test = LoadMassFiles("Zero_test",numFiles);
close all;


% Initialize cookbook
Cookbook = [];

% Concatenate all the codebooks
for i = 1:numFiles
    % add an indicator number to the top of the codebook
    numCodebookVectors = size(zero_train{i}.Codebook,2);
    tempCodebook = [ones(1,numCodebookVectors)*i ; zero_train{i}.Codebook];
    tempCodebookTwo = [ones(1,numCodebookVectors)*i ; twelve_train{i}.Codebook];
    Cookbook = [Cookbook, tempCodebook, tempCodebookTwo];
end
% Cookbook excluding the first row which is the indicator for which set it
% came from 
CookbookWithNoPageNumbers = Cookbook(2:end,:);

% Zero Train and Zero Test
counter = 0;
for i = 1:numFiles
    test1 = zero_test{i}.Codebook;
    
    % Compute the distance between the selected test vector and
    % the closest vector to it in the codebook using the CodebookClosest
    % function
    [dist, ind] = CodebookClosest(test1,CookbookWithNoPageNumbers);
    
    % Do the comparison
    Cookbook(1,ind);
    mo = mode(Cookbook(1,ind));
    fprintf('test: %i ; mode: %i\n',i,mo); % just a little section to calc the percent correct
    if mo == i
        counter = counter + 1;
    end
end
fprintf('Congratulations on testing Zero! \nPercent Correct: %f%%\nNumber Correct: %i\n\n',100*counter/numFiles,counter)


% Twelve Test and Twelve Train
counter = 0;
for i = 1:numFiles
    test1 = twelve_test{i}.Codebook;

    % Compute the distance between the selected test vector and
    % the closest vector to it in the codebook using the CodebookClosest
    % function
    [dist, ind] = CodebookClosest(test1,CookbookWithNoPageNumbers);
    
    % Do the comparison
    Cookbook(1,ind);
    mo = mode(Cookbook(1,ind));
    fprintf('test: %i ; mode: %i\n',i,mo); % just a little section to calc the percent correct
    if mo == i
        counter = counter + 1;
    end
end
fprintf('Congratulations on testing Twelve! \nPercent Correct: %f%%\nNumber Correct: %i\n\n',100*counter/numFiles,counter)





%% Codebook with the provided test and train samples


% define the number of files
numTestFiles = 8;
numTrainFiles = 8;

% load in the samples
train_objs = LoadMassFiles("train",numTestFiles);
test_objs = LoadMassFiles("test",numTrainFiles);

% Concatenate all the codebooks
for i = 1:numTestFiles
    % add an indicator number to the top of the codebook
    numCodebookVectors = size(train_objs{i}.Codebook,2);
    tempCodebook = [ones(1,numCodebookVectors)*i ; zero_train{i}.Codebook];
    Cookbook = [Cookbook, tempCodebook];
end
% Cookbook excluding the first row which is the indicator for which set it
% came from 
CookbookWithNoPageNumbers = Cookbook(2:end,:);


% Test and train file test with given samples
counter = 0;
for i = 1:numFiles
    test1 = test_objs{i}.Codebook;

    % Compute the distance between the selected test vector and
    % the closest vector to it in the codebook using the CodebookClosest
    % function
    [dist, ind] = CodebookClosest(test1,CookbookWithNoPageNumbers);
    
    % Do the comparison
    Cookbook(1,ind);
    mo = mode(Cookbook(1,ind));
    fprintf('test: %i ; mode: %i\n',i,mo); % just a little section to calc the percent correct
    if mo == i
        counter = counter + 1;
    end
end
fprintf('Congratulations on testing Twelve! \nPercent Correct: %f%%\nNumber Correct: %i\n\n',100*counter/numFiles,counter)